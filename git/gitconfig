[user]
	name = YOUR_NAME_HERE
	email = YOUR_EMAIL_HERE
	# signingkey = YOUR_GPG_KEY_ID  # Uncomment and set if using GPG signing

[core]
	editor = nvim
	pager = delta
	excludesfile = ~/.gitignore_global
	autocrlf = input
	filemode = true
	trustctime = false
	precomposeunicode = false
	untrackedCache = true

[init]
	defaultBranch = main

[push]
	default = simple
	autoSetupRemote = true

[pull]
	rebase = true

[fetch]
	prune = true

[rebase]
	autoStash = true
	autoSquash = true

[merge]
	tool = vimdiff
	conflictstyle = diff3

[diff]
	tool = vimdiff
	colorMoved = default

[delta]
	navigate = true
	side-by-side = true
	line-numbers = true
	syntax-theme = Catppuccin-mocha

[interactive]
	diffFilter = delta --color-only

[rerere]
	enabled = true

[branch]
	autoSetupMerge = always
	autoSetupRebase = always

[status]
	showUntrackedFiles = all

[log]
	date = relative

# Aliases for enhanced productivity
[alias]
	# Basic shortcuts
	co = checkout
	br = branch
	ci = commit
	st = status
	unstage = reset HEAD --
	last = log -1 HEAD
	visual = !gitk

	# Enhanced log formats
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	le = log --oneline --decorate

	# File and directory operations
	dl = "!git ll -1"
	dlc = diff --cached HEAD^
	dr = "!f() { git diff "$1"^.."$1"; }; f"
	lc = "!f() { git ll "$1"^.."$1"; }; f"
	diffr = "!f() { git diff "$1"^.."$1"; }; f"

	# Working with worktrees
	wt = worktree
	wtl = worktree list
	wta = worktree add
	wtr = worktree remove
	wtp = worktree prune

	# Branch management
	cleanup = "!git branch --merged | grep -v '\\*\\|main\\|master\\|develop' | xargs -n 1 git branch -d"
	recent = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

	# Stash operations
	sl = stash list
	sa = stash apply
	ss = stash save
	sp = stash pop

	# Quick operations
	cp = cherry-pick
	amend = commit -a --amend
	undo = reset --soft HEAD^
	wipe = reset --hard HEAD

	# Search and find
	grep = grep -Ii
	f = "!git ls-files | grep -i"
	gr = grep --break --heading --line-number

	# GitHub CLI integration
	pr = "!gh pr"
	issue = "!gh issue"
	repo = "!gh repo"

	# Worktree workflow shortcuts
	feature = "!f() { git worktree add ../worktrees/$1 -b feature/$1; cd ../worktrees/$1; }; f"
	hotfix = "!f() { git worktree add ../worktrees/$1 -b hotfix/$1; cd ../worktrees/$1; }; f"

	# Quick commit patterns
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -u && git commit -m "WIP"
	undo = reset HEAD~1 --mixed
	amend = commit -a --amend

	# Statistics and analysis
	rank = shortlog -sn --no-merges
	bdm = "!git branch --merged | grep -v '*' | xargs -n 1 git branch -d"

# URL shortcuts for common Git hosting services
[url "git@github.com:"]
	insteadOf = gh:
	pushInsteadOf = github:
	pushInsteadOf = git://github.com/

[url "git@gitlab.com:"]
	insteadOf = gl:
	pushInsteadOf = gitlab:
	pushInsteadOf = git://gitlab.com/

[url "git@bitbucket.org:"]
	insteadOf = bb:
	pushInsteadOf = bitbucket:
	pushInsteadOf = git://bitbucket.org/

# GitHub-specific settings
[github]
	user = YOUR_GITHUB_USERNAME

# GitLab-specific settings
[gitlab]
	user = YOUR_GITLAB_USERNAME

# GPG signing (optional)
[commit]
	gpgsign = false

[gpg]
	program = gpg

# Conditional includes for work/personal configs
[includeIf "gitdir:~/code/work/"]
	path = ~/.gitconfig_work

[includeIf "gitdir:~/code/personal/"]
	path = ~/.gitconfig_personal

# Color configuration
[color]
	ui = auto
	branch = auto
	diff = auto
	status = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# Performance optimizations
[pack]
	threads = 0

[feature]
	manyFiles = true

# LFS support
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

# Maintenance
[maintenance]
	repo = true